{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  exports.Patterns = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n  var PenaltyScores = {\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n  };\n\n  exports.isValid = function isValid(mask) {\n    return mask && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n  };\n\n  exports.from = function from(value) {\n    return exports.isValid(value) ? parseInt(value, 10) : undefined;\n  };\n\n  exports.getPenaltyN1 = function getPenaltyN1(data) {\n    var size = data.size;\n    var points = 0;\n    var sameCountCol = 0;\n    var sameCountRow = 0;\n    var lastCol = null;\n    var lastRow = null;\n\n    for (var row = 0; row < size; row++) {\n      sameCountCol = sameCountRow = 0;\n      lastCol = lastRow = null;\n\n      for (var col = 0; col < size; col++) {\n        var module = data.get(row, col);\n\n        if (module === lastCol) {\n          sameCountCol++;\n        } else {\n          if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n          lastCol = module;\n          sameCountCol = 1;\n        }\n\n        module = data.get(col, row);\n\n        if (module === lastRow) {\n          sameCountRow++;\n        } else {\n          if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n          lastRow = module;\n          sameCountRow = 1;\n        }\n      }\n\n      if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);\n      if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);\n    }\n\n    return points;\n  };\n\n  exports.getPenaltyN2 = function getPenaltyN2(data) {\n    var size = data.size;\n    var points = 0;\n\n    for (var row = 0; row < size - 1; row++) {\n      for (var col = 0; col < size - 1; col++) {\n        var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);\n        if (last === 4 || last === 0) points++;\n      }\n    }\n\n    return points * PenaltyScores.N2;\n  };\n\n  exports.getPenaltyN3 = function getPenaltyN3(data) {\n    var size = data.size;\n    var points = 0;\n    var bitsCol = 0;\n    var bitsRow = 0;\n\n    for (var row = 0; row < size; row++) {\n      bitsCol = bitsRow = 0;\n\n      for (var col = 0; col < size; col++) {\n        bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);\n        if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;\n        bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);\n        if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;\n      }\n    }\n\n    return points * PenaltyScores.N3;\n  };\n\n  exports.getPenaltyN4 = function getPenaltyN4(data) {\n    var darkCount = 0;\n    var modulesCount = data.data.length;\n\n    for (var i = 0; i < modulesCount; i++) {\n      darkCount += data.data[i];\n    }\n\n    var k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);\n    return k * PenaltyScores.N4;\n  };\n\n  function getMaskAt(maskPattern, i, j) {\n    switch (maskPattern) {\n      case exports.Patterns.PATTERN000:\n        return (i + j) % 2 === 0;\n\n      case exports.Patterns.PATTERN001:\n        return i % 2 === 0;\n\n      case exports.Patterns.PATTERN010:\n        return j % 3 === 0;\n\n      case exports.Patterns.PATTERN011:\n        return (i + j) % 3 === 0;\n\n      case exports.Patterns.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n\n      case exports.Patterns.PATTERN101:\n        return i * j % 2 + i * j % 3 === 0;\n\n      case exports.Patterns.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 === 0;\n\n      case exports.Patterns.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 === 0;\n\n      default:\n        throw new Error('bad maskPattern:' + maskPattern);\n    }\n  }\n\n  exports.applyMask = function applyMask(pattern, data) {\n    var size = data.size;\n\n    for (var col = 0; col < size; col++) {\n      for (var row = 0; row < size; row++) {\n        if (data.isReserved(row, col)) continue;\n        data.xor(row, col, getMaskAt(pattern, row, col));\n      }\n    }\n  };\n\n  exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n    var numPatterns = Object.keys(exports.Patterns).length;\n    var bestPattern = 0;\n    var lowerPenalty = Infinity;\n\n    for (var p = 0; p < numPatterns; p++) {\n      setupFormatFunc(p);\n      exports.applyMask(p, data);\n      var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);\n      exports.applyMask(p, data);\n\n      if (penalty < lowerPenalty) {\n        lowerPenalty = penalty;\n        bestPattern = p;\n      }\n    }\n\n    return bestPattern;\n  };\n});","map":[[2,0,5,0,"exports"],[2,2,5,0,"exports"],[2,9,5,7],[2,10,5,8,"Patterns"],[2,18,5,0],[2,21,5,19],[3,0,6,2,"PATTERN000"],[3,4,6,2,"PATTERN000"],[3,14,6,12],[3,16,6,14],[3,17,5,19],[4,0,7,2,"PATTERN001"],[4,4,7,2,"PATTERN001"],[4,14,7,12],[4,16,7,14],[4,17,5,19],[5,0,8,2,"PATTERN010"],[5,4,8,2,"PATTERN010"],[5,14,8,12],[5,16,8,14],[5,17,5,19],[6,0,9,2,"PATTERN011"],[6,4,9,2,"PATTERN011"],[6,14,9,12],[6,16,9,14],[6,17,5,19],[7,0,10,2,"PATTERN100"],[7,4,10,2,"PATTERN100"],[7,14,10,12],[7,16,10,14],[7,17,5,19],[8,0,11,2,"PATTERN101"],[8,4,11,2,"PATTERN101"],[8,14,11,12],[8,16,11,14],[8,17,5,19],[9,0,12,2,"PATTERN110"],[9,4,12,2,"PATTERN110"],[9,14,12,12],[9,16,12,14],[9,17,5,19],[10,0,13,2,"PATTERN111"],[10,4,13,2,"PATTERN111"],[10,14,13,12],[10,16,13,14],[11,0,5,19],[11,3,5,0],[12,0,20,0],[12,6,20,4,"PenaltyScores"],[12,19,20,17],[12,22,20,20],[13,0,21,2,"N1"],[13,4,21,2,"N1"],[13,6,21,4],[13,8,21,6],[13,9,20,20],[14,0,22,2,"N2"],[14,4,22,2,"N2"],[14,6,22,4],[14,8,22,6],[14,9,20,20],[15,0,23,2,"N3"],[15,4,23,2,"N3"],[15,6,23,4],[15,8,23,6],[15,10,20,20],[16,0,24,2,"N4"],[16,4,24,2,"N4"],[16,6,24,4],[16,8,24,6],[17,0,20,20],[17,3,20,0],[19,0,33,0,"exports"],[19,2,33,0,"exports"],[19,9,33,7],[19,10,33,8,"isValid"],[19,17,33,0],[19,20,33,18],[19,29,33,27,"isValid"],[19,36,33,18],[19,37,33,36,"mask"],[19,41,33,18],[19,43,33,42],[20,0,34,2],[20,11,34,9,"mask"],[20,15,34,13],[20,19,34,17,"mask"],[20,23,34,21],[20,28,34,26],[20,30,34,9],[20,34,34,32],[20,35,34,33,"isNaN"],[20,40,34,38],[20,41,34,39,"mask"],[20,45,34,38],[20,46,34,9],[20,50,34,48,"mask"],[20,54,34,52],[20,58,34,56],[20,59,34,9],[20,63,34,61,"mask"],[20,67,34,65],[20,71,34,69],[20,72,34,2],[21,0,35,1],[21,3,33,0],[23,0,44,0,"exports"],[23,2,44,0,"exports"],[23,9,44,7],[23,10,44,8,"from"],[23,14,44,0],[23,17,44,15],[23,26,44,24,"from"],[23,30,44,15],[23,31,44,30,"value"],[23,36,44,15],[23,38,44,37],[24,0,45,2],[24,11,45,9,"exports"],[24,18,45,16],[24,19,45,17,"isValid"],[24,26,45,9],[24,27,45,25,"value"],[24,32,45,9],[24,36,45,34,"parseInt"],[24,44,45,42],[24,45,45,43,"value"],[24,50,45,42],[24,52,45,50],[24,54,45,42],[24,55,45,9],[24,58,45,56,"undefined"],[24,67,45,2],[25,0,46,1],[25,3,44,0],[27,0,55,0,"exports"],[27,2,55,0,"exports"],[27,9,55,7],[27,10,55,8,"getPenaltyN1"],[27,22,55,0],[27,25,55,23],[27,34,55,32,"getPenaltyN1"],[27,46,55,23],[27,47,55,46,"data"],[27,51,55,23],[27,53,55,52],[28,0,56,2],[28,8,56,6,"size"],[28,12,56,10],[28,15,56,13,"data"],[28,19,56,17],[28,20,56,18,"size"],[28,24,56,2],[29,0,57,2],[29,8,57,6,"points"],[29,14,57,12],[29,17,57,15],[29,18,57,2],[30,0,58,2],[30,8,58,6,"sameCountCol"],[30,20,58,18],[30,23,58,21],[30,24,58,2],[31,0,59,2],[31,8,59,6,"sameCountRow"],[31,20,59,18],[31,23,59,21],[31,24,59,2],[32,0,60,2],[32,8,60,6,"lastCol"],[32,15,60,13],[32,18,60,16],[32,22,60,2],[33,0,61,2],[33,8,61,6,"lastRow"],[33,15,61,13],[33,18,61,16],[33,22,61,2],[35,0,63,2],[35,9,63,7],[35,13,63,11,"row"],[35,16,63,14],[35,19,63,17],[35,20,63,2],[35,22,63,20,"row"],[35,25,63,23],[35,28,63,26,"size"],[35,32,63,2],[35,34,63,32,"row"],[35,37,63,35],[35,39,63,2],[35,41,63,39],[36,0,64,4,"sameCountCol"],[36,6,64,4,"sameCountCol"],[36,18,64,16],[36,21,64,19,"sameCountRow"],[36,33,64,31],[36,36,64,34],[36,37,64,4],[37,0,65,4,"lastCol"],[37,6,65,4,"lastCol"],[37,13,65,11],[37,16,65,14,"lastRow"],[37,23,65,21],[37,26,65,24],[37,30,65,4],[39,0,67,4],[39,11,67,9],[39,15,67,13,"col"],[39,18,67,16],[39,21,67,19],[39,22,67,4],[39,24,67,22,"col"],[39,27,67,25],[39,30,67,28,"size"],[39,34,67,4],[39,36,67,34,"col"],[39,39,67,37],[39,41,67,4],[39,43,67,41],[40,0,68,6],[40,12,68,10,"module"],[40,18,68,16],[40,21,68,19,"data"],[40,25,68,23],[40,26,68,24,"get"],[40,29,68,19],[40,30,68,28,"row"],[40,33,68,19],[40,35,68,33,"col"],[40,38,68,19],[40,39,68,6],[42,0,69,6],[42,12,69,10,"module"],[42,18,69,16],[42,23,69,21,"lastCol"],[42,30,69,6],[42,32,69,30],[43,0,70,8,"sameCountCol"],[43,10,70,8,"sameCountCol"],[43,22,70,20],[44,0,71,7],[44,9,69,6],[44,15,71,13],[45,0,72,8],[45,14,72,12,"sameCountCol"],[45,26,72,24],[45,30,72,28],[45,31,72,8],[45,33,72,31,"points"],[45,39,72,37],[45,43,72,41,"PenaltyScores"],[45,56,72,54],[45,57,72,55,"N1"],[45,59,72,41],[45,63,72,61,"sameCountCol"],[45,75,72,73],[45,78,72,76],[45,79,72,41],[45,80,72,31],[46,0,73,8,"lastCol"],[46,10,73,8,"lastCol"],[46,17,73,15],[46,20,73,18,"module"],[46,26,73,8],[47,0,74,8,"sameCountCol"],[47,10,74,8,"sameCountCol"],[47,22,74,20],[47,25,74,23],[47,26,74,8],[48,0,75,7],[50,0,77,6,"module"],[50,8,77,6,"module"],[50,14,77,12],[50,17,77,15,"data"],[50,21,77,19],[50,22,77,20,"get"],[50,25,77,15],[50,26,77,24,"col"],[50,29,77,15],[50,31,77,29,"row"],[50,34,77,15],[50,35,77,6],[52,0,78,6],[52,12,78,10,"module"],[52,18,78,16],[52,23,78,21,"lastRow"],[52,30,78,6],[52,32,78,30],[53,0,79,8,"sameCountRow"],[53,10,79,8,"sameCountRow"],[53,22,79,20],[54,0,80,7],[54,9,78,6],[54,15,80,13],[55,0,81,8],[55,14,81,12,"sameCountRow"],[55,26,81,24],[55,30,81,28],[55,31,81,8],[55,33,81,31,"points"],[55,39,81,37],[55,43,81,41,"PenaltyScores"],[55,56,81,54],[55,57,81,55,"N1"],[55,59,81,41],[55,63,81,61,"sameCountRow"],[55,75,81,73],[55,78,81,76],[55,79,81,41],[55,80,81,31],[56,0,82,8,"lastRow"],[56,10,82,8,"lastRow"],[56,17,82,15],[56,20,82,18,"module"],[56,26,82,8],[57,0,83,8,"sameCountRow"],[57,10,83,8,"sameCountRow"],[57,22,83,20],[57,25,83,23],[57,26,83,8],[58,0,84,7],[59,0,85,5],[61,0,87,4],[61,10,87,8,"sameCountCol"],[61,22,87,20],[61,26,87,24],[61,27,87,4],[61,29,87,27,"points"],[61,35,87,33],[61,39,87,37,"PenaltyScores"],[61,52,87,50],[61,53,87,51,"N1"],[61,55,87,37],[61,59,87,57,"sameCountCol"],[61,71,87,69],[61,74,87,72],[61,75,87,37],[61,76,87,27],[62,0,88,4],[62,10,88,8,"sameCountRow"],[62,22,88,20],[62,26,88,24],[62,27,88,4],[62,29,88,27,"points"],[62,35,88,33],[62,39,88,37,"PenaltyScores"],[62,52,88,50],[62,53,88,51,"N1"],[62,55,88,37],[62,59,88,57,"sameCountRow"],[62,71,88,69],[62,74,88,72],[62,75,88,37],[62,76,88,27],[63,0,89,3],[65,0,91,2],[65,11,91,9,"points"],[65,17,91,2],[66,0,92,1],[66,3,55,0],[68,0,99,0,"exports"],[68,2,99,0,"exports"],[68,9,99,7],[68,10,99,8,"getPenaltyN2"],[68,22,99,0],[68,25,99,23],[68,34,99,32,"getPenaltyN2"],[68,46,99,23],[68,47,99,46,"data"],[68,51,99,23],[68,53,99,52],[69,0,100,2],[69,8,100,6,"size"],[69,12,100,10],[69,15,100,13,"data"],[69,19,100,17],[69,20,100,18,"size"],[69,24,100,2],[70,0,101,2],[70,8,101,6,"points"],[70,14,101,12],[70,17,101,15],[70,18,101,2],[72,0,103,2],[72,9,103,7],[72,13,103,11,"row"],[72,16,103,14],[72,19,103,17],[72,20,103,2],[72,22,103,20,"row"],[72,25,103,23],[72,28,103,26,"size"],[72,32,103,30],[72,35,103,33],[72,36,103,2],[72,38,103,36,"row"],[72,41,103,39],[72,43,103,2],[72,45,103,43],[73,0,104,4],[73,11,104,9],[73,15,104,13,"col"],[73,18,104,16],[73,21,104,19],[73,22,104,4],[73,24,104,22,"col"],[73,27,104,25],[73,30,104,28,"size"],[73,34,104,32],[73,37,104,35],[73,38,104,4],[73,40,104,38,"col"],[73,43,104,41],[73,45,104,4],[73,47,104,45],[74,0,105,6],[74,12,105,10,"last"],[74,16,105,14],[74,19,105,17,"data"],[74,23,105,21],[74,24,105,22,"get"],[74,27,105,17],[74,28,105,26,"row"],[74,31,105,17],[74,33,105,31,"col"],[74,36,105,17],[74,40,106,8,"data"],[74,44,106,12],[74,45,106,13,"get"],[74,48,106,8],[74,49,106,17,"row"],[74,52,106,8],[74,54,106,22,"col"],[74,57,106,25],[74,60,106,28],[74,61,106,8],[74,62,105,17],[74,65,107,8,"data"],[74,69,107,12],[74,70,107,13,"get"],[74,73,107,8],[74,74,107,17,"row"],[74,77,107,20],[74,80,107,23],[74,81,107,8],[74,83,107,26,"col"],[74,86,107,8],[74,87,105,17],[74,90,108,8,"data"],[74,94,108,12],[74,95,108,13,"get"],[74,98,108,8],[74,99,108,17,"row"],[74,102,108,20],[74,105,108,23],[74,106,108,8],[74,108,108,26,"col"],[74,111,108,29],[74,114,108,32],[74,115,108,8],[74,116,105,6],[75,0,110,6],[75,12,110,10,"last"],[75,16,110,14],[75,21,110,19],[75,22,110,10],[75,26,110,24,"last"],[75,30,110,28],[75,35,110,33],[75,36,110,6],[75,38,110,36,"points"],[75,44,110,42],[76,0,111,5],[77,0,112,3],[79,0,114,2],[79,11,114,9,"points"],[79,17,114,15],[79,20,114,18,"PenaltyScores"],[79,33,114,31],[79,34,114,32,"N2"],[79,36,114,2],[80,0,115,1],[80,3,99,0],[82,0,123,0,"exports"],[82,2,123,0,"exports"],[82,9,123,7],[82,10,123,8,"getPenaltyN3"],[82,22,123,0],[82,25,123,23],[82,34,123,32,"getPenaltyN3"],[82,46,123,23],[82,47,123,46,"data"],[82,51,123,23],[82,53,123,52],[83,0,124,2],[83,8,124,6,"size"],[83,12,124,10],[83,15,124,13,"data"],[83,19,124,17],[83,20,124,18,"size"],[83,24,124,2],[84,0,125,2],[84,8,125,6,"points"],[84,14,125,12],[84,17,125,15],[84,18,125,2],[85,0,126,2],[85,8,126,6,"bitsCol"],[85,15,126,13],[85,18,126,16],[85,19,126,2],[86,0,127,2],[86,8,127,6,"bitsRow"],[86,15,127,13],[86,18,127,16],[86,19,127,2],[88,0,129,2],[88,9,129,7],[88,13,129,11,"row"],[88,16,129,14],[88,19,129,17],[88,20,129,2],[88,22,129,20,"row"],[88,25,129,23],[88,28,129,26,"size"],[88,32,129,2],[88,34,129,32,"row"],[88,37,129,35],[88,39,129,2],[88,41,129,39],[89,0,130,4,"bitsCol"],[89,6,130,4,"bitsCol"],[89,13,130,11],[89,16,130,14,"bitsRow"],[89,23,130,21],[89,26,130,24],[89,27,130,4],[91,0,131,4],[91,11,131,9],[91,15,131,13,"col"],[91,18,131,16],[91,21,131,19],[91,22,131,4],[91,24,131,22,"col"],[91,27,131,25],[91,30,131,28,"size"],[91,34,131,4],[91,36,131,34,"col"],[91,39,131,37],[91,41,131,4],[91,43,131,41],[92,0,132,6,"bitsCol"],[92,8,132,6,"bitsCol"],[92,15,132,13],[92,18,132,18,"bitsCol"],[92,25,132,25],[92,29,132,29],[92,30,132,17],[92,33,132,34],[92,38,132,16],[92,41,132,43,"data"],[92,45,132,47],[92,46,132,48,"get"],[92,49,132,43],[92,50,132,52,"row"],[92,53,132,43],[92,55,132,57,"col"],[92,58,132,43],[92,59,132,6],[93,0,133,6],[93,12,133,10,"col"],[93,15,133,13],[93,19,133,17],[93,21,133,10],[93,26,133,24,"bitsCol"],[93,33,133,31],[93,38,133,36],[93,43,133,24],[93,47,133,45,"bitsCol"],[93,54,133,52],[93,59,133,57],[93,64,133,10],[93,65,133,6],[93,67,133,65,"points"],[93,73,133,71],[94,0,135,6,"bitsRow"],[94,8,135,6,"bitsRow"],[94,15,135,13],[94,18,135,18,"bitsRow"],[94,25,135,25],[94,29,135,29],[94,30,135,17],[94,33,135,34],[94,38,135,16],[94,41,135,43,"data"],[94,45,135,47],[94,46,135,48,"get"],[94,49,135,43],[94,50,135,52,"col"],[94,53,135,43],[94,55,135,57,"row"],[94,58,135,43],[94,59,135,6],[95,0,136,6],[95,12,136,10,"col"],[95,15,136,13],[95,19,136,17],[95,21,136,10],[95,26,136,24,"bitsRow"],[95,33,136,31],[95,38,136,36],[95,43,136,24],[95,47,136,45,"bitsRow"],[95,54,136,52],[95,59,136,57],[95,64,136,10],[95,65,136,6],[95,67,136,65,"points"],[95,73,136,71],[96,0,137,5],[97,0,138,3],[99,0,140,2],[99,11,140,9,"points"],[99,17,140,15],[99,20,140,18,"PenaltyScores"],[99,33,140,31],[99,34,140,32,"N3"],[99,36,140,2],[100,0,141,1],[100,3,123,0],[102,0,151,0,"exports"],[102,2,151,0,"exports"],[102,9,151,7],[102,10,151,8,"getPenaltyN4"],[102,22,151,0],[102,25,151,23],[102,34,151,32,"getPenaltyN4"],[102,46,151,23],[102,47,151,46,"data"],[102,51,151,23],[102,53,151,52],[103,0,152,2],[103,8,152,6,"darkCount"],[103,17,152,15],[103,20,152,18],[103,21,152,2],[104,0,153,2],[104,8,153,6,"modulesCount"],[104,20,153,18],[104,23,153,21,"data"],[104,27,153,25],[104,28,153,26,"data"],[104,32,153,21],[104,33,153,31,"length"],[104,39,153,2],[106,0,155,2],[106,9,155,7],[106,13,155,11,"i"],[106,14,155,12],[106,17,155,15],[106,18,155,2],[106,20,155,18,"i"],[106,21,155,19],[106,24,155,22,"modulesCount"],[106,36,155,2],[106,38,155,36,"i"],[106,39,155,37],[106,41,155,2],[107,0,155,41,"darkCount"],[107,6,155,41,"darkCount"],[107,15,155,50],[107,19,155,54,"data"],[107,23,155,58],[107,24,155,59,"data"],[107,28,155,54],[107,29,155,64,"i"],[107,30,155,54],[107,31,155,41],[108,0,155,2],[110,0,157,2],[110,8,157,6,"k"],[110,9,157,7],[110,12,157,10,"Math"],[110,16,157,14],[110,17,157,15,"abs"],[110,20,157,10],[110,21,157,19,"Math"],[110,25,157,23],[110,26,157,24,"ceil"],[110,30,157,19],[110,31,157,30,"darkCount"],[110,40,157,39],[110,43,157,42],[110,46,157,30],[110,49,157,48,"modulesCount"],[110,61,157,29],[110,64,157,64],[110,65,157,19],[110,69,157,69],[110,71,157,10],[110,72,157,2],[111,0,159,2],[111,11,159,9,"k"],[111,12,159,10],[111,15,159,13,"PenaltyScores"],[111,28,159,26],[111,29,159,27,"N4"],[111,31,159,2],[112,0,160,1],[112,3,151,0],[114,0,170,0],[114,11,170,9,"getMaskAt"],[114,20,170,0],[114,21,170,20,"maskPattern"],[114,32,170,0],[114,34,170,33,"i"],[114,35,170,0],[114,37,170,36,"j"],[114,38,170,0],[114,40,170,39],[115,0,171,2],[115,12,171,10,"maskPattern"],[115,23,171,2],[116,0,172,4],[116,11,172,9,"exports"],[116,18,172,16],[116,19,172,17,"Patterns"],[116,27,172,9],[116,28,172,26,"PATTERN000"],[116,38,172,4],[117,0,172,38],[117,15,172,45],[117,16,172,46,"i"],[117,17,172,47],[117,20,172,50,"j"],[117,21,172,45],[117,25,172,55],[117,26,172,45],[117,31,172,61],[117,32,172,38],[119,0,173,4],[119,11,173,9,"exports"],[119,18,173,16],[119,19,173,17,"Patterns"],[119,27,173,9],[119,28,173,26,"PATTERN001"],[119,38,173,4],[120,0,173,38],[120,15,173,45,"i"],[120,16,173,46],[120,19,173,49],[120,20,173,45],[120,25,173,55],[120,26,173,38],[122,0,174,4],[122,11,174,9,"exports"],[122,18,174,16],[122,19,174,17,"Patterns"],[122,27,174,9],[122,28,174,26,"PATTERN010"],[122,38,174,4],[123,0,174,38],[123,15,174,45,"j"],[123,16,174,46],[123,19,174,49],[123,20,174,45],[123,25,174,55],[123,26,174,38],[125,0,175,4],[125,11,175,9,"exports"],[125,18,175,16],[125,19,175,17,"Patterns"],[125,27,175,9],[125,28,175,26,"PATTERN011"],[125,38,175,4],[126,0,175,38],[126,15,175,45],[126,16,175,46,"i"],[126,17,175,47],[126,20,175,50,"j"],[126,21,175,45],[126,25,175,55],[126,26,175,45],[126,31,175,61],[126,32,175,38],[128,0,176,4],[128,11,176,9,"exports"],[128,18,176,16],[128,19,176,17,"Patterns"],[128,27,176,9],[128,28,176,26,"PATTERN100"],[128,38,176,4],[129,0,176,38],[129,15,176,45],[129,16,176,46,"Math"],[129,20,176,50],[129,21,176,51,"floor"],[129,26,176,46],[129,27,176,57,"i"],[129,28,176,58],[129,31,176,61],[129,32,176,46],[129,36,176,66,"Math"],[129,40,176,70],[129,41,176,71,"floor"],[129,46,176,66],[129,47,176,77,"j"],[129,48,176,78],[129,51,176,81],[129,52,176,66],[129,53,176,45],[129,57,176,87],[129,58,176,45],[129,63,176,93],[129,64,176,38],[131,0,177,4],[131,11,177,9,"exports"],[131,18,177,16],[131,19,177,17,"Patterns"],[131,27,177,9],[131,28,177,26,"PATTERN101"],[131,38,177,4],[132,0,177,38],[132,15,177,46,"i"],[132,16,177,47],[132,19,177,50,"j"],[132,20,177,45],[132,23,177,55],[132,24,177,45],[132,27,177,60,"i"],[132,28,177,61],[132,31,177,64,"j"],[132,32,177,59],[132,35,177,69],[132,36,177,45],[132,41,177,75],[132,42,177,38],[134,0,178,4],[134,11,178,9,"exports"],[134,18,178,16],[134,19,178,17,"Patterns"],[134,27,178,9],[134,28,178,26,"PATTERN110"],[134,38,178,4],[135,0,178,38],[135,15,178,45],[135,16,178,47,"i"],[135,17,178,48],[135,20,178,51,"j"],[135,21,178,46],[135,24,178,56],[135,25,178,46],[135,28,178,61,"i"],[135,29,178,62],[135,32,178,65,"j"],[135,33,178,60],[135,36,178,70],[135,37,178,45],[135,41,178,75],[135,42,178,45],[135,47,178,81],[135,48,178,38],[137,0,179,4],[137,11,179,9,"exports"],[137,18,179,16],[137,19,179,17,"Patterns"],[137,27,179,9],[137,28,179,26,"PATTERN111"],[137,38,179,4],[138,0,179,38],[138,15,179,45],[138,16,179,47,"i"],[138,17,179,48],[138,20,179,51,"j"],[138,21,179,46],[138,24,179,56],[138,25,179,46],[138,28,179,60],[138,29,179,61,"i"],[138,30,179,62],[138,33,179,65,"j"],[138,34,179,60],[138,38,179,70],[138,39,179,45],[138,43,179,75],[138,44,179,45],[138,49,179,81],[138,50,179,38],[140,0,181,4],[141,0,181,13],[141,14,181,19],[141,18,181,23,"Error"],[141,23,181,19],[141,24,181,29],[141,45,181,50,"maskPattern"],[141,56,181,19],[141,57,181,13],[142,0,171,2],[143,0,183,1],[145,0,191,0,"exports"],[145,2,191,0,"exports"],[145,9,191,7],[145,10,191,8,"applyMask"],[145,19,191,0],[145,22,191,20],[145,31,191,29,"applyMask"],[145,40,191,20],[145,41,191,40,"pattern"],[145,48,191,20],[145,50,191,49,"data"],[145,54,191,20],[145,56,191,55],[146,0,192,2],[146,8,192,6,"size"],[146,12,192,10],[146,15,192,13,"data"],[146,19,192,17],[146,20,192,18,"size"],[146,24,192,2],[148,0,194,2],[148,9,194,7],[148,13,194,11,"col"],[148,16,194,14],[148,19,194,17],[148,20,194,2],[148,22,194,20,"col"],[148,25,194,23],[148,28,194,26,"size"],[148,32,194,2],[148,34,194,32,"col"],[148,37,194,35],[148,39,194,2],[148,41,194,39],[149,0,195,4],[149,11,195,9],[149,15,195,13,"row"],[149,18,195,16],[149,21,195,19],[149,22,195,4],[149,24,195,22,"row"],[149,27,195,25],[149,30,195,28,"size"],[149,34,195,4],[149,36,195,34,"row"],[149,39,195,37],[149,41,195,4],[149,43,195,41],[150,0,196,6],[150,12,196,10,"data"],[150,16,196,14],[150,17,196,15,"isReserved"],[150,27,196,10],[150,28,196,26,"row"],[150,31,196,10],[150,33,196,31,"col"],[150,36,196,10],[150,37,196,6],[150,39,196,37],[151,0,197,6,"data"],[151,8,197,6,"data"],[151,12,197,10],[151,13,197,11,"xor"],[151,16,197,6],[151,17,197,15,"row"],[151,20,197,6],[151,22,197,20,"col"],[151,25,197,6],[151,27,197,25,"getMaskAt"],[151,36,197,34],[151,37,197,35,"pattern"],[151,44,197,34],[151,46,197,44,"row"],[151,49,197,34],[151,51,197,49,"col"],[151,54,197,34],[151,55,197,6],[152,0,198,5],[153,0,199,3],[154,0,200,1],[154,3,191,0],[156,0,208,0,"exports"],[156,2,208,0,"exports"],[156,9,208,7],[156,10,208,8,"getBestMask"],[156,21,208,0],[156,24,208,22],[156,33,208,31,"getBestMask"],[156,44,208,22],[156,45,208,44,"data"],[156,49,208,22],[156,51,208,50,"setupFormatFunc"],[156,66,208,22],[156,68,208,67],[157,0,209,2],[157,8,209,6,"numPatterns"],[157,19,209,17],[157,22,209,20,"Object"],[157,28,209,26],[157,29,209,27,"keys"],[157,33,209,20],[157,34,209,32,"exports"],[157,41,209,39],[157,42,209,40,"Patterns"],[157,50,209,20],[157,52,209,50,"length"],[157,58,209,2],[158,0,210,2],[158,8,210,6,"bestPattern"],[158,19,210,17],[158,22,210,20],[158,23,210,2],[159,0,211,2],[159,8,211,6,"lowerPenalty"],[159,20,211,18],[159,23,211,21,"Infinity"],[159,31,211,2],[161,0,213,2],[161,9,213,7],[161,13,213,11,"p"],[161,14,213,12],[161,17,213,15],[161,18,213,2],[161,20,213,18,"p"],[161,21,213,19],[161,24,213,22,"numPatterns"],[161,35,213,2],[161,37,213,35,"p"],[161,38,213,36],[161,40,213,2],[161,42,213,40],[162,0,214,4,"setupFormatFunc"],[162,6,214,4,"setupFormatFunc"],[162,21,214,19],[162,22,214,20,"p"],[162,23,214,19],[162,24,214,4],[163,0,215,4,"exports"],[163,6,215,4,"exports"],[163,13,215,11],[163,14,215,12,"applyMask"],[163,23,215,4],[163,24,215,22,"p"],[163,25,215,4],[163,27,215,25,"data"],[163,31,215,4],[164,0,218,4],[164,10,218,8,"penalty"],[164,17,218,15],[164,20,219,6,"exports"],[164,27,219,13],[164,28,219,14,"getPenaltyN1"],[164,40,219,6],[164,41,219,27,"data"],[164,45,219,6],[164,49,220,6,"exports"],[164,56,220,13],[164,57,220,14,"getPenaltyN2"],[164,69,220,6],[164,70,220,27,"data"],[164,74,220,6],[164,75,219,6],[164,78,221,6,"exports"],[164,85,221,13],[164,86,221,14,"getPenaltyN3"],[164,98,221,6],[164,99,221,27,"data"],[164,103,221,6],[164,104,219,6],[164,107,222,6,"exports"],[164,114,222,13],[164,115,222,14,"getPenaltyN4"],[164,127,222,6],[164,128,222,27,"data"],[164,132,222,6],[164,133,218,4],[165,0,225,4,"exports"],[165,6,225,4,"exports"],[165,13,225,11],[165,14,225,12,"applyMask"],[165,23,225,4],[165,24,225,22,"p"],[165,25,225,4],[165,27,225,25,"data"],[165,31,225,4],[167,0,227,4],[167,10,227,8,"penalty"],[167,17,227,15],[167,20,227,18,"lowerPenalty"],[167,32,227,4],[167,34,227,32],[168,0,228,6,"lowerPenalty"],[168,8,228,6,"lowerPenalty"],[168,20,228,18],[168,23,228,21,"penalty"],[168,30,228,6],[169,0,229,6,"bestPattern"],[169,8,229,6,"bestPattern"],[169,19,229,17],[169,22,229,20,"p"],[169,23,229,6],[170,0,230,5],[171,0,231,3],[173,0,233,2],[173,11,233,9,"bestPattern"],[173,22,233,2],[174,0,234,1],[174,3,208,0]]},"type":"js/module"}]}