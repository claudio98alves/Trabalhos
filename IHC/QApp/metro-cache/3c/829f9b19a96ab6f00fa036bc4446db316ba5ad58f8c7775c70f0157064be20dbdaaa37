{"dependencies":[{"name":"./mode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Mode = _$$_REQUIRE(_dependencyMap[0], \"./mode\");\n\n  var ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];\n\n  function AlphanumericData(data) {\n    this.mode = Mode.ALPHANUMERIC;\n    this.data = data;\n  }\n\n  AlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n  };\n\n  AlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n  };\n\n  AlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n  };\n\n  AlphanumericData.prototype.write = function write(bitBuffer) {\n    var i;\n\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\n      var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n      value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n      bitBuffer.put(value, 11);\n    }\n\n    if (this.data.length % 2) {\n      bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n  };\n\n  module.exports = AlphanumericData;\n});","map":[[2,0,1,0],[2,6,1,4,"Mode"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,53,1,0],[4,0,12,0],[4,6,12,4,"ALPHA_NUM_CHARS"],[4,21,12,19],[4,24,12,22],[4,25,13,2],[4,28,12,22],[4,30,13,7],[4,33,12,22],[4,35,13,12],[4,38,12,22],[4,40,13,17],[4,43,12,22],[4,45,13,22],[4,48,12,22],[4,50,13,27],[4,53,12,22],[4,55,13,32],[4,58,12,22],[4,60,13,37],[4,63,12,22],[4,65,13,42],[4,68,12,22],[4,70,13,47],[4,73,12,22],[4,75,14,2],[4,78,12,22],[4,80,14,7],[4,83,12,22],[4,85,14,12],[4,88,12,22],[4,90,14,17],[4,93,12,22],[4,95,14,22],[4,98,12,22],[4,100,14,27],[4,103,12,22],[4,105,14,32],[4,108,12,22],[4,110,14,37],[4,113,12,22],[4,115,14,42],[4,118,12,22],[4,120,14,47],[4,123,12,22],[4,125,14,52],[4,128,12,22],[4,130,14,57],[4,133,12,22],[4,135,14,62],[4,138,12,22],[4,140,15,2],[4,143,12,22],[4,145,15,7],[4,148,12,22],[4,150,15,12],[4,153,12,22],[4,155,15,17],[4,158,12,22],[4,160,15,22],[4,163,12,22],[4,165,15,27],[4,168,12,22],[4,170,15,32],[4,173,12,22],[4,175,15,37],[4,178,12,22],[4,180,15,42],[4,183,12,22],[4,185,15,47],[4,188,12,22],[4,190,15,52],[4,193,12,22],[4,195,15,57],[4,198,12,22],[4,200,15,62],[4,203,12,22],[4,205,16,2],[4,208,12,22],[4,210,16,7],[4,213,12,22],[4,215,16,12],[4,218,12,22],[4,220,16,17],[4,223,12,22],[4,225,16,22],[4,228,12,22],[4,230,16,27],[4,233,12,22],[4,235,16,32],[4,238,12,22],[4,240,16,37],[4,243,12,22],[4,245,16,42],[4,248,12,22],[4,249,12,0],[6,0,19,0],[6,11,19,9,"AlphanumericData"],[6,27,19,0],[6,28,19,27,"data"],[6,32,19,0],[6,34,19,33],[7,0,20,2],[7,9,20,7,"mode"],[7,13,20,2],[7,16,20,14,"Mode"],[7,20,20,18],[7,21,20,19,"ALPHANUMERIC"],[7,33,20,2],[8,0,21,2],[8,9,21,7,"data"],[8,13,21,2],[8,16,21,14,"data"],[8,20,21,2],[9,0,22,1],[11,0,24,0,"AlphanumericData"],[11,2,24,0,"AlphanumericData"],[11,18,24,16],[11,19,24,17,"getBitsLength"],[11,32,24,0],[11,35,24,33],[11,44,24,42,"getBitsLength"],[11,57,24,33],[11,58,24,57,"length"],[11,64,24,33],[11,66,24,65],[12,0,25,2],[12,11,25,9],[12,16,25,14,"Math"],[12,20,25,18],[12,21,25,19,"floor"],[12,26,25,14],[12,27,25,25,"length"],[12,33,25,31],[12,36,25,34],[12,37,25,14],[12,38,25,9],[12,41,25,39],[12,46,25,44,"length"],[12,52,25,50],[12,55,25,53],[12,56,25,39],[12,57,25,2],[13,0,26,1],[13,3,24,0],[15,0,28,0,"AlphanumericData"],[15,2,28,0,"AlphanumericData"],[15,18,28,16],[15,19,28,17,"prototype"],[15,28,28,0],[15,29,28,27,"getLength"],[15,38,28,0],[15,41,28,39],[15,50,28,48,"getLength"],[15,59,28,39],[15,62,28,61],[16,0,29,2],[16,11,29,9],[16,16,29,14,"data"],[16,20,29,9],[16,21,29,19,"length"],[16,27,29,2],[17,0,30,1],[17,3,28,0],[19,0,32,0,"AlphanumericData"],[19,2,32,0,"AlphanumericData"],[19,18,32,16],[19,19,32,17,"prototype"],[19,28,32,0],[19,29,32,27,"getBitsLength"],[19,42,32,0],[19,45,32,43],[19,54,32,52,"getBitsLength"],[19,67,32,43],[19,70,32,69],[20,0,33,2],[20,11,33,9,"AlphanumericData"],[20,27,33,25],[20,28,33,26,"getBitsLength"],[20,41,33,9],[20,42,33,40],[20,47,33,45,"data"],[20,51,33,40],[20,52,33,50,"length"],[20,58,33,9],[20,59,33,2],[21,0,34,1],[21,3,32,0],[23,0,36,0,"AlphanumericData"],[23,2,36,0,"AlphanumericData"],[23,18,36,16],[23,19,36,17,"prototype"],[23,28,36,0],[23,29,36,27,"write"],[23,34,36,0],[23,37,36,35],[23,46,36,44,"write"],[23,51,36,35],[23,52,36,51,"bitBuffer"],[23,61,36,35],[23,63,36,62],[24,0,37,2],[24,8,37,6,"i"],[24,9,37,2],[26,0,41,2],[26,9,41,7,"i"],[26,10,41,8],[26,13,41,11],[26,14,41,2],[26,16,41,14,"i"],[26,17,41,15],[26,20,41,18],[26,21,41,14],[26,25,41,23],[26,30,41,28,"data"],[26,34,41,23],[26,35,41,33,"length"],[26,41,41,2],[26,43,41,41,"i"],[26,44,41,42],[26,48,41,46],[26,49,41,2],[26,51,41,49],[27,0,43,4],[27,10,43,8,"value"],[27,15,43,13],[27,18,43,16,"ALPHA_NUM_CHARS"],[27,33,43,31],[27,34,43,32,"indexOf"],[27,41,43,16],[27,42,43,40],[27,47,43,45,"data"],[27,51,43,40],[27,52,43,50,"i"],[27,53,43,40],[27,54,43,16],[27,58,43,56],[27,60,43,4],[28,0,46,4,"value"],[28,6,46,4,"value"],[28,11,46,9],[28,15,46,13,"ALPHA_NUM_CHARS"],[28,30,46,28],[28,31,46,29,"indexOf"],[28,38,46,13],[28,39,46,37],[28,44,46,42,"data"],[28,48,46,37],[28,49,46,47,"i"],[28,50,46,48],[28,53,46,51],[28,54,46,37],[28,55,46,13],[28,56,46,4],[29,0,49,4,"bitBuffer"],[29,6,49,4,"bitBuffer"],[29,15,49,13],[29,16,49,14,"put"],[29,19,49,4],[29,20,49,18,"value"],[29,25,49,4],[29,27,49,25],[29,29,49,4],[30,0,50,3],[32,0,54,2],[32,8,54,6],[32,13,54,11,"data"],[32,17,54,6],[32,18,54,16,"length"],[32,24,54,6],[32,27,54,25],[32,28,54,2],[32,30,54,28],[33,0,55,4,"bitBuffer"],[33,6,55,4,"bitBuffer"],[33,15,55,13],[33,16,55,14,"put"],[33,19,55,4],[33,20,55,18,"ALPHA_NUM_CHARS"],[33,35,55,33],[33,36,55,34,"indexOf"],[33,43,55,18],[33,44,55,42],[33,49,55,47,"data"],[33,53,55,42],[33,54,55,52,"i"],[33,55,55,42],[33,56,55,18],[33,57,55,4],[33,59,55,57],[33,60,55,4],[34,0,56,3],[35,0,57,1],[35,3,36,0],[37,0,59,0,"module"],[37,2,59,0,"module"],[37,8,59,6],[37,9,59,7,"exports"],[37,16,59,0],[37,19,59,17,"AlphanumericData"],[37,35,59,0]]},"type":"js/module"}]}