{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"lodash/mapValues","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoBarCodeScannerModule","data":{"isAsync":false}},{"name":"./ExpoBarCodeScannerView","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Constants = exports.BarCodeScanner = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[11], \"@unimodules/core\");\n\n  var _mapValues = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash/mapValues\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[14], \"react-native\");\n\n  var _ExpoBarCodeScannerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./ExpoBarCodeScannerModule\"));\n\n  var _ExpoBarCodeScannerView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./ExpoBarCodeScannerView\"));\n\n  var _jsxFileName = \"/home/miguelletra/Desktop/qapp/QApp/node_modules/expo-barcode-scanner/build/BarCodeScanner.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    BarCodeScanner: {\n      displayName: \"BarCodeScanner\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/expo-barcode-scanner/build/BarCodeScanner.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var BarCodeType = _ExpoBarCodeScannerModule.default.BarCodeType,\n      Type = _ExpoBarCodeScannerModule.default.Type;\n  var EVENT_THROTTLE_MS = 500;\n\n  var BarCodeScanner = function (_React$Component) {\n    (0, _inherits2.default)(BarCodeScanner, _React$Component);\n\n    function BarCodeScanner() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, BarCodeScanner);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BarCodeScanner).apply(this, arguments));\n      _this.lastEvents = {};\n      _this.lastEventsTimes = {};\n\n      _this.onObjectDetected = function (callback) {\n        return function (_ref) {\n          var nativeEvent = _ref.nativeEvent;\n          var type = nativeEvent.type;\n\n          if (_this.lastEvents[type] && _this.lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this.lastEvents[type] && Date.now() - _this.lastEventsTimes[type] < EVENT_THROTTLE_MS) {\n            return;\n          }\n\n          if (callback) {\n            callback(nativeEvent);\n            _this.lastEventsTimes[type] = new Date();\n            _this.lastEvents[type] = JSON.stringify(nativeEvent);\n          }\n        };\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(BarCodeScanner, [{\n      key: \"render\",\n      value: function render() {\n        var nativeProps = this.convertNativeProps(this.props);\n        var onBarCodeScanned = this.props.onBarCodeScanned;\n        return _react.default.createElement(_ExpoBarCodeScannerView.default, (0, _extends2.default)({}, nativeProps, {\n          onBarCodeScanned: this.onObjectDetected(onBarCodeScanned),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          }\n        }));\n      }\n    }, {\n      key: \"convertNativeProps\",\n      value: function convertNativeProps(props) {\n        var newProps = (0, _mapValues.default)(props, this.convertProp);\n        return newProps;\n      }\n    }, {\n      key: \"convertProp\",\n      value: function convertProp(value, key) {\n        if (typeof value === 'string' && BarCodeScanner.ConversionTables[key]) {\n          return BarCodeScanner.ConversionTables[key][value];\n        }\n\n        return value;\n      }\n    }], [{\n      key: \"scanFromURLAsync\",\n      value: function scanFromURLAsync(url) {\n        var barCodeTypes,\n            _args = arguments;\n        return _regenerator.default.async(function scanFromURLAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                barCodeTypes = _args.length > 1 && _args[1] !== undefined ? _args[1] : Object.values(BarCodeType);\n\n                if (_ExpoBarCodeScannerModule.default.scanFromURLAsync) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new _core.UnavailabilityError('expo-barcode-scanner', 'scanFromURLAsync');\n\n              case 3:\n                if (!(Array.isArray(barCodeTypes) && !barCodeTypes.length)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('No barCodeTypes specified; provide at least one barCodeType for scanner');\n\n              case 5:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 11;\n                  break;\n                }\n\n                if (!(Array.isArray(barCodeTypes) && !barCodeTypes.includes(BarCodeType.qr))) {\n                  _context.next = 8;\n                  break;\n                }\n\n                throw new Error('Only QR type is supported by scanFromURLAsync() on iOS');\n\n              case 8:\n                _context.next = 10;\n                return _regenerator.default.awrap(_ExpoBarCodeScannerModule.default.scanFromURLAsync(url, [BarCodeType.qr]));\n\n              case 10:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 11:\n                _context.next = 13;\n                return _regenerator.default.awrap(_ExpoBarCodeScannerModule.default.scanFromURLAsync(url, barCodeTypes));\n\n              case 13:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      }\n    }]);\n    return BarCodeScanner;\n  }(_react.default.Component);\n\n  exports.BarCodeScanner = BarCodeScanner;\n  exports.BarCodeScanner = BarCodeScanner = _wrapComponent(\"BarCodeScanner\")(BarCodeScanner);\n  BarCodeScanner.Constants = {\n    BarCodeType: BarCodeType,\n    Type: Type\n  };\n  BarCodeScanner.ConversionTables = {\n    type: Type\n  };\n  BarCodeScanner.propTypes = _objectSpread({}, _reactNative.ViewPropTypes, {\n    onBarCodeScanned: _propTypes.default.func,\n    barCodeTypes: _propTypes.default.array,\n    type: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  });\n  BarCodeScanner.defaultProps = {\n    type: Type.back,\n    barCodeTypes: Object.values(BarCodeType)\n  };\n  var Constants = BarCodeScanner.Constants;\n  exports.Constants = Constants;\n});","map":[[25,0,4,0],[29,0,1,0],[31,0,2,0],[33,0,3,0],[35,0,5,0],[37,0,6,0],[39,0,7,0],[66,6,8,8,"BarCodeType"],[66,17],[66,20,8,30,"ExpoBarCodeScannerModule"],[66,53],[66,54,8,8,"BarCodeType"],[66,65],[67,6,8,21,"Type"],[67,10],[67,13,8,30,"ExpoBarCodeScannerModule"],[67,46],[67,47,8,21,"Type"],[67,51],[68,0,9,0],[68,6,9,6,"EVENT_THROTTLE_MS"],[68,23,9,23],[68,26,9,26],[68,29,9,0],[70,6,10,13,"BarCodeScanner"],[70,20],[73,0,11,4],[73,30,11,18],[74,0,11,18],[76,0,11,18],[77,0,12,8],[77,119,12,17,"arguments"],[77,128,12,8],[78,0,13,8],[78,12,13,13,"lastEvents"],[78,22,13,8],[78,25,13,26],[78,27,13,8],[79,0,14,8],[79,12,14,13,"lastEventsTimes"],[79,27,14,8],[79,30,14,31],[79,32,14,8],[81,0,17,8],[81,12,17,13,"onObjectDetected"],[81,28,17,8],[81,31,17,32],[81,41,17,33,"callback"],[81,49,17,32],[82,0,17,32],[82,15,17,46],[82,31,17,68],[83,0,17,68],[83,14,17,49,"nativeEvent"],[83,25,17,68],[83,33,17,49,"nativeEvent"],[83,44,17,68],[84,0,17,68],[84,14,18,20,"type"],[84,18,17,68],[84,21,18,29,"nativeEvent"],[84,32,17,68],[84,33,18,20,"type"],[84,37,17,68],[86,0,19,12],[86,14,19,16],[86,20,19,21,"lastEvents"],[86,30,19,16],[86,31,19,32,"type"],[86,35,19,16],[86,40,20,16],[86,46,20,21,"lastEventsTimes"],[86,61,20,16],[86,62,20,37,"type"],[86,66,20,16],[86,67,19,16],[86,71,21,16,"JSON"],[86,75,21,20],[86,76,21,21,"stringify"],[86,85,21,16],[86,86,21,31,"nativeEvent"],[86,97,21,16],[86,103,21,48],[86,109,21,53,"lastEvents"],[86,119,21,48],[86,120,21,64,"type"],[86,124,21,48],[86,125,19,16],[86,129,22,16,"Date"],[86,133,22,20],[86,134,22,21,"now"],[86,137,22,16],[86,142,22,29],[86,148,22,34,"lastEventsTimes"],[86,163,22,29],[86,164,22,50,"type"],[86,168,22,29],[86,169,22,16],[86,172,22,58,"EVENT_THROTTLE_MS"],[86,189,19,12],[86,191,22,77],[87,0,23,16],[88,0,24,13],[90,0,25,12],[90,14,25,16,"callback"],[90,22,25,12],[90,24,25,26],[91,0,26,16,"callback"],[91,12,26,16,"callback"],[91,20,26,24],[91,21,26,25,"nativeEvent"],[91,32,26,24],[91,33,26,16],[92,0,27,16],[92,18,27,21,"lastEventsTimes"],[92,33,27,16],[92,34,27,37,"type"],[92,38,27,16],[92,42,27,45],[92,46,27,49,"Date"],[92,50,27,45],[92,52,27,16],[93,0,28,16],[93,18,28,21,"lastEvents"],[93,28,28,16],[93,29,28,32,"type"],[93,33,28,16],[93,37,28,40,"JSON"],[93,41,28,44],[93,42,28,45,"stringify"],[93,51,28,40],[93,52,28,55,"nativeEvent"],[93,63,28,40],[93,64,28,16],[94,0,29,13],[95,0,30,9],[95,9,17,32],[96,0,17,32],[96,7,17,8],[98,0,11,18],[99,0,31,5],[103,31,50,13],[104,0,51,8],[104,12,51,14,"nativeProps"],[104,23,51,25],[104,26,51,28],[104,31,51,33,"convertNativeProps"],[104,49,51,28],[104,50,51,52],[104,55,51,57,"props"],[104,60,51,28],[104,61,51,8],[105,0,50,13],[105,12,52,16,"onBarCodeScanned"],[105,28,50,13],[105,31,52,37],[105,36,52,42,"props"],[105,41,50,13],[105,42,52,16,"onBarCodeScanned"],[105,58,50,13],[106,0,53,8],[106,15,53,16],[106,44,53,17],[106,75,53,16],[106,104,53,44,"nativeProps"],[106,115,53,16],[107,0,53,57],[107,10,53,57],[107,26,53,73],[107,28,53,75],[107,33,53,80,"onObjectDetected"],[107,49,53,75],[107,50,53,97,"onBarCodeScanned"],[107,66,53,75],[107,67,53,16],[108,0,53,16],[109,0,53,16],[110,0,53,16],[111,0,53,16],[112,0,53,16],[112,11,53,8],[113,0,54,5],[116,41,55,23,"props"],[116,46],[116,48,55,30],[117,0,56,8],[117,12,56,14,"newProps"],[117,20,56,22],[117,23,56,25],[117,47,56,35,"props"],[117,52,56,25],[117,54,56,42],[117,59,56,47,"convertProp"],[117,70,56,25],[117,71,56,8],[118,0,57,8],[118,15,57,15,"newProps"],[118,23,57,8],[119,0,58,5],[122,34,59,16,"value"],[122,39],[122,41,59,23,"key"],[122,44],[122,46,59,28],[123,0,60,8],[123,12,60,12],[123,19,60,19,"value"],[123,24,60,12],[123,29,60,29],[123,37,60,12],[123,41,60,41,"BarCodeScanner"],[123,55,60,55],[123,56,60,56,"ConversionTables"],[123,72,60,41],[123,73,60,73,"key"],[123,76,60,41],[123,77,60,8],[123,79,60,79],[124,0,61,12],[124,17,61,19,"BarCodeScanner"],[124,31,61,33],[124,32,61,34,"ConversionTables"],[124,48,61,19],[124,49,61,51,"key"],[124,52,61,19],[124,54,61,56,"value"],[124,59,61,19],[124,60,61,12],[125,0,62,9],[127,0,63,8],[127,15,63,15,"value"],[127,20,63,8],[128,0,64,5],[131,39,32,34,"url"],[131,42],[138,0,32,39,"barCodeTypes"],[138,16,32,39,"barCodeTypes"],[138,28],[138,87,32,54,"Object"],[138,93,32,60],[138,94,32,61,"values"],[138,100,32,54],[138,101,32,68,"BarCodeType"],[138,112,32,54],[138,113],[140,20,33,13,"ExpoBarCodeScannerModule"],[140,54,33,38,"scanFromURLAsync"],[140,70],[145,22,34,18],[145,26,34,22,"UnavailabilityError"],[145,51,34,18],[145,52,34,42],[145,74,34,18],[145,76,34,66],[145,94,34,18],[145,95],[148,22,36,12,"Array"],[148,27,36,17],[148,28,36,18,"isArray"],[148,35,36,12],[148,36,36,26,"barCodeTypes"],[148,48,36,12],[148,53,36,43],[148,54,36,44,"barCodeTypes"],[148,66,36,56],[148,67,36,57,"length"],[148,73],[153,22,37,18],[153,26,37,22,"Error"],[153,31,37,18],[153,32,37,28],[153,105,37,18],[153,106],[156,22,39,12,"Platform"],[156,44,39,21,"OS"],[156,46,39,12],[156,51,39,28],[156,56],[161,22,40,16,"Array"],[161,27,40,21],[161,28,40,22,"isArray"],[161,35,40,16],[161,36,40,30,"barCodeTypes"],[161,48,40,16],[161,53,40,47],[161,54,40,48,"barCodeTypes"],[161,66,40,60],[161,67,40,61,"includes"],[161,75,40,48],[161,76,40,70,"BarCodeType"],[161,87,40,81],[161,88,40,82,"qr"],[161,90,40,48],[161,91],[166,22,42,22],[166,26,42,26,"Error"],[166,31,42,22],[166,32,42,32],[166,88,42,22],[166,89],[170,50,45,25,"ExpoBarCodeScannerModule"],[170,84,45,50,"scanFromURLAsync"],[170,100,45,25],[170,101,45,67,"url"],[170,104,45,25],[170,106,45,72],[170,107,45,73,"BarCodeType"],[170,118,45,84],[170,119,45,85,"qr"],[170,121,45,72],[170,122,45,25],[170,123],[177,50,48,21,"ExpoBarCodeScannerModule"],[177,84,48,46,"scanFromURLAsync"],[177,100,48,21],[177,101,48,63,"url"],[177,104,48,21],[177,106,48,68,"barCodeTypes"],[177,118,48,21],[177,119],[191,4,10,36,"React"],[191,19,10,42,"Component"],[191,28],[195,0,66,0,"BarCodeScanner"],[195,2,66,0,"BarCodeScanner"],[195,16,66,14],[195,17,66,15,"Constants"],[195,26,66,0],[195,29,66,27],[196,0,67,4,"BarCodeType"],[196,4,67,4,"BarCodeType"],[196,15,67,15],[196,17,67,4,"BarCodeType"],[196,28,66,27],[197,0,68,4,"Type"],[197,4,68,4,"Type"],[197,8,68,8],[197,10,68,4,"Type"],[198,0,66,27],[198,3,66,0],[199,0,70,0,"BarCodeScanner"],[199,2,70,0,"BarCodeScanner"],[199,16,70,14],[199,17,70,15,"ConversionTables"],[199,33,70,0],[199,36,70,34],[200,0,71,4,"type"],[200,4,71,4,"type"],[200,8,71,8],[200,10,71,10,"Type"],[201,0,70,34],[201,3,70,0],[202,0,73,0,"BarCodeScanner"],[202,2,73,0,"BarCodeScanner"],[202,16,73,14],[202,17,73,15,"propTypes"],[202,26,73,0],[202,47,74,7,"ViewPropTypes"],[202,73,73,0],[203,0,75,4,"onBarCodeScanned"],[203,4,75,4,"onBarCodeScanned"],[203,20,75,20],[203,22,75,22,"PropTypes"],[203,41,75,32,"func"],[203,45,73,0],[204,0,76,4,"barCodeTypes"],[204,4,76,4,"barCodeTypes"],[204,16,76,16],[204,18,76,18,"PropTypes"],[204,37,76,28,"array"],[204,42,73,0],[205,0,77,4,"type"],[205,4,77,4,"type"],[205,8,77,8],[205,10,77,10,"PropTypes"],[205,29,77,20,"oneOfType"],[205,38,77,10],[205,39,77,30],[205,40,77,31,"PropTypes"],[205,59,77,41,"string"],[205,65,77,30],[205,67,77,49,"PropTypes"],[205,86,77,59,"number"],[205,92,77,30],[205,93,77,10],[206,0,73,0],[207,0,79,0,"BarCodeScanner"],[207,2,79,0,"BarCodeScanner"],[207,16,79,14],[207,17,79,15,"defaultProps"],[207,29,79,0],[207,32,79,30],[208,0,80,4,"type"],[208,4,80,4,"type"],[208,8,80,8],[208,10,80,10,"Type"],[208,14,80,14],[208,15,80,15,"back"],[208,19,79,30],[209,0,81,4,"barCodeTypes"],[209,4,81,4,"barCodeTypes"],[209,16,81,16],[209,18,81,18,"Object"],[209,24,81,24],[209,25,81,25,"values"],[209,31,81,18],[209,32,81,32,"BarCodeType"],[209,43,81,18],[210,0,79,30],[210,3,79,0],[211,6,83,15,"Constants"],[211,15],[211,18,83,29,"BarCodeScanner"],[211,32],[211,33,83,15,"Constants"],[211,42]]},"type":"js/module"}]}