{"dependencies":[{"name":"../utils/buffer","data":{"isAsync":false}},{"name":"./mode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Buffer = _$$_REQUIRE(_dependencyMap[0], \"../utils/buffer\");\n\n  var Mode = _$$_REQUIRE(_dependencyMap[1], \"./mode\");\n\n  function ByteData(data) {\n    this.mode = Mode.BYTE;\n    this.data = new Buffer(data);\n  }\n\n  ByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n  };\n\n  ByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n  };\n\n  ByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n  };\n\n  ByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n      bitBuffer.put(this.data[i], 8);\n    }\n  };\n\n  module.exports = ByteData;\n});","map":[[2,0,1,0],[2,6,1,4,"Buffer"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,64,1,0],[4,0,2,0],[4,6,2,4,"Mode"],[4,10,2,8],[4,13,2,11,"require"],[4,24,2,18],[4,53,2,0],[6,0,4,0],[6,11,4,9,"ByteData"],[6,19,4,0],[6,20,4,19,"data"],[6,24,4,0],[6,26,4,25],[7,0,5,2],[7,9,5,7,"mode"],[7,13,5,2],[7,16,5,14,"Mode"],[7,20,5,18],[7,21,5,19,"BYTE"],[7,25,5,2],[8,0,6,2],[8,9,6,7,"data"],[8,13,6,2],[8,16,6,14],[8,20,6,18,"Buffer"],[8,26,6,14],[8,27,6,25,"data"],[8,31,6,14],[8,32,6,2],[9,0,7,1],[11,0,9,0,"ByteData"],[11,2,9,0,"ByteData"],[11,10,9,8],[11,11,9,9,"getBitsLength"],[11,24,9,0],[11,27,9,25],[11,36,9,34,"getBitsLength"],[11,49,9,25],[11,50,9,49,"length"],[11,56,9,25],[11,58,9,57],[12,0,10,2],[12,11,10,9,"length"],[12,17,10,15],[12,20,10,18],[12,21,10,2],[13,0,11,1],[13,3,9,0],[15,0,13,0,"ByteData"],[15,2,13,0,"ByteData"],[15,10,13,8],[15,11,13,9,"prototype"],[15,20,13,0],[15,21,13,19,"getLength"],[15,30,13,0],[15,33,13,31],[15,42,13,40,"getLength"],[15,51,13,31],[15,54,13,53],[16,0,14,2],[16,11,14,9],[16,16,14,14,"data"],[16,20,14,9],[16,21,14,19,"length"],[16,27,14,2],[17,0,15,1],[17,3,13,0],[19,0,17,0,"ByteData"],[19,2,17,0,"ByteData"],[19,10,17,8],[19,11,17,9,"prototype"],[19,20,17,0],[19,21,17,19,"getBitsLength"],[19,34,17,0],[19,37,17,35],[19,46,17,44,"getBitsLength"],[19,59,17,35],[19,62,17,61],[20,0,18,2],[20,11,18,9,"ByteData"],[20,19,18,17],[20,20,18,18,"getBitsLength"],[20,33,18,9],[20,34,18,32],[20,39,18,37,"data"],[20,43,18,32],[20,44,18,42,"length"],[20,50,18,9],[20,51,18,2],[21,0,19,1],[21,3,17,0],[23,0,21,0,"ByteData"],[23,2,21,0,"ByteData"],[23,10,21,8],[23,11,21,9,"prototype"],[23,20,21,0],[23,21,21,19,"write"],[23,26,21,0],[23,29,21,27],[23,39,21,37,"bitBuffer"],[23,48,21,27],[23,50,21,48],[24,0,22,2],[24,9,22,7],[24,13,22,11,"i"],[24,14,22,12],[24,17,22,15],[24,18,22,7],[24,20,22,18,"l"],[24,21,22,19],[24,24,22,22],[24,29,22,27,"data"],[24,33,22,22],[24,34,22,32,"length"],[24,40,22,2],[24,42,22,40,"i"],[24,43,22,41],[24,46,22,44,"l"],[24,47,22,2],[24,49,22,47,"i"],[24,50,22,48],[24,52,22,2],[24,54,22,52],[25,0,23,4,"bitBuffer"],[25,6,23,4,"bitBuffer"],[25,15,23,13],[25,16,23,14,"put"],[25,19,23,4],[25,20,23,18],[25,25,23,23,"data"],[25,29,23,18],[25,30,23,28,"i"],[25,31,23,18],[25,32,23,4],[25,34,23,32],[25,35,23,4],[26,0,24,3],[27,0,25,1],[27,3,21,0],[29,0,27,0,"module"],[29,2,27,0,"module"],[29,8,27,6],[29,9,27,7,"exports"],[29,16,27,0],[29,19,27,17,"ByteData"],[29,27,27,0]]},"type":"js/module"}]}