{"dependencies":[{"name":"../utils/buffer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Buffer = _$$_REQUIRE(_dependencyMap[0], \"../utils/buffer\");\n\n  function BitMatrix(size) {\n    if (!size || size < 1) {\n      throw new Error('BitMatrix size must be defined and greater than 0');\n    }\n\n    this.size = size;\n    this.data = new Buffer(size * size);\n    this.data.fill(0);\n    this.reservedBit = new Buffer(size * size);\n    this.reservedBit.fill(0);\n  }\n\n  BitMatrix.prototype.set = function (row, col, value, reserved) {\n    var index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved) this.reservedBit[index] = true;\n  };\n\n  BitMatrix.prototype.get = function (row, col) {\n    return this.data[row * this.size + col];\n  };\n\n  BitMatrix.prototype.xor = function (row, col, value) {\n    this.data[row * this.size + col] ^= value;\n  };\n\n  BitMatrix.prototype.isReserved = function (row, col) {\n    return this.reservedBit[row * this.size + col];\n  };\n\n  module.exports = BitMatrix;\n});","map":[[2,0,1,0],[2,6,1,4,"Buffer"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,64,1,0],[4,0,8,0],[4,11,8,9,"BitMatrix"],[4,20,8,0],[4,21,8,20,"size"],[4,25,8,0],[4,27,8,26],[5,0,9,2],[5,8,9,6],[5,9,9,7,"size"],[5,13,9,6],[5,17,9,15,"size"],[5,21,9,19],[5,24,9,22],[5,25,9,2],[5,27,9,25],[6,0,10,4],[6,12,10,10],[6,16,10,14,"Error"],[6,21,10,10],[6,22,10,20],[6,73,10,10],[6,74,10,4],[7,0,11,3],[9,0,13,2],[9,9,13,7,"size"],[9,13,13,2],[9,16,13,14,"size"],[9,20,13,2],[10,0,14,2],[10,9,14,7,"data"],[10,13,14,2],[10,16,14,14],[10,20,14,18,"Buffer"],[10,26,14,14],[10,27,14,25,"size"],[10,31,14,29],[10,34,14,32,"size"],[10,38,14,14],[10,39,14,2],[11,0,15,2],[11,9,15,7,"data"],[11,13,15,2],[11,14,15,12,"fill"],[11,18,15,2],[11,19,15,17],[11,20,15,2],[12,0,16,2],[12,9,16,7,"reservedBit"],[12,20,16,2],[12,23,16,21],[12,27,16,25,"Buffer"],[12,33,16,21],[12,34,16,32,"size"],[12,38,16,36],[12,41,16,39,"size"],[12,45,16,21],[12,46,16,2],[13,0,17,2],[13,9,17,7,"reservedBit"],[13,20,17,2],[13,21,17,19,"fill"],[13,25,17,2],[13,26,17,24],[13,27,17,2],[14,0,18,1],[16,0,29,0,"BitMatrix"],[16,2,29,0,"BitMatrix"],[16,11,29,9],[16,12,29,10,"prototype"],[16,21,29,0],[16,22,29,20,"set"],[16,25,29,0],[16,28,29,26],[16,38,29,36,"row"],[16,41,29,26],[16,43,29,41,"col"],[16,46,29,26],[16,48,29,46,"value"],[16,53,29,26],[16,55,29,53,"reserved"],[16,63,29,26],[16,65,29,63],[17,0,30,2],[17,8,30,6,"index"],[17,13,30,11],[17,16,30,14,"row"],[17,19,30,17],[17,22,30,20],[17,27,30,25,"size"],[17,31,30,14],[17,34,30,32,"col"],[17,37,30,2],[18,0,31,2],[18,9,31,7,"data"],[18,13,31,2],[18,14,31,12,"index"],[18,19,31,2],[18,23,31,21,"value"],[18,28,31,2],[19,0,32,2],[19,8,32,6,"reserved"],[19,16,32,2],[19,18,32,16],[19,23,32,21,"reservedBit"],[19,34,32,16],[19,35,32,33,"index"],[19,40,32,16],[19,44,32,42],[19,48,32,16],[20,0,33,1],[20,3,29,0],[22,0,42,0,"BitMatrix"],[22,2,42,0,"BitMatrix"],[22,11,42,9],[22,12,42,10,"prototype"],[22,21,42,0],[22,22,42,20,"get"],[22,25,42,0],[22,28,42,26],[22,38,42,36,"row"],[22,41,42,26],[22,43,42,41,"col"],[22,46,42,26],[22,48,42,46],[23,0,43,2],[23,11,43,9],[23,16,43,14,"data"],[23,20,43,9],[23,21,43,19,"row"],[23,24,43,22],[23,27,43,25],[23,32,43,30,"size"],[23,36,43,19],[23,39,43,37,"col"],[23,42,43,9],[23,43,43,2],[24,0,44,1],[24,3,42,0],[26,0,54,0,"BitMatrix"],[26,2,54,0,"BitMatrix"],[26,11,54,9],[26,12,54,10,"prototype"],[26,21,54,0],[26,22,54,20,"xor"],[26,25,54,0],[26,28,54,26],[26,38,54,36,"row"],[26,41,54,26],[26,43,54,41,"col"],[26,46,54,26],[26,48,54,46,"value"],[26,53,54,26],[26,55,54,53],[27,0,55,2],[27,9,55,7,"data"],[27,13,55,2],[27,14,55,12,"row"],[27,17,55,15],[27,20,55,18],[27,25,55,23,"size"],[27,29,55,12],[27,32,55,30,"col"],[27,35,55,2],[27,40,55,38,"value"],[27,45,55,2],[28,0,56,1],[28,3,54,0],[30,0,65,0,"BitMatrix"],[30,2,65,0,"BitMatrix"],[30,11,65,9],[30,12,65,10,"prototype"],[30,21,65,0],[30,22,65,20,"isReserved"],[30,32,65,0],[30,35,65,33],[30,45,65,43,"row"],[30,48,65,33],[30,50,65,48,"col"],[30,53,65,33],[30,55,65,53],[31,0,66,2],[31,11,66,9],[31,16,66,14,"reservedBit"],[31,27,66,9],[31,28,66,26,"row"],[31,31,66,29],[31,34,66,32],[31,39,66,37,"size"],[31,43,66,26],[31,46,66,44,"col"],[31,49,66,9],[31,50,66,2],[32,0,67,1],[32,3,65,0],[34,0,69,0,"module"],[34,2,69,0,"module"],[34,8,69,6],[34,9,69,7,"exports"],[34,16,69,0],[34,19,69,17,"BitMatrix"],[34,28,69,0]]},"type":"js/module"}]}