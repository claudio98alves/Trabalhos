{"dependencies":[{"name":"../utils/buffer","data":{"isAsync":false}},{"name":"./galois-field","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Buffer = _$$_REQUIRE(_dependencyMap[0], \"../utils/buffer\");\n\n  var GF = _$$_REQUIRE(_dependencyMap[1], \"./galois-field\");\n\n  exports.mul = function mul(p1, p2) {\n    var coeff = new Buffer(p1.length + p2.length - 1);\n    coeff.fill(0);\n\n    for (var i = 0; i < p1.length; i++) {\n      for (var j = 0; j < p2.length; j++) {\n        coeff[i + j] ^= GF.mul(p1[i], p2[j]);\n      }\n    }\n\n    return coeff;\n  };\n\n  exports.mod = function mod(divident, divisor) {\n    var result = new Buffer(divident);\n\n    while (result.length - divisor.length >= 0) {\n      var coeff = result[0];\n\n      for (var i = 0; i < divisor.length; i++) {\n        result[i] ^= GF.mul(divisor[i], coeff);\n      }\n\n      var offset = 0;\n\n      while (offset < result.length && result[offset] === 0) {\n        offset++;\n      }\n\n      result = result.slice(offset);\n    }\n\n    return result;\n  };\n\n  exports.generateECPolynomial = function generateECPolynomial(degree) {\n    var poly = new Buffer([1]);\n\n    for (var i = 0; i < degree; i++) {\n      poly = exports.mul(poly, [1, GF.exp(i)]);\n    }\n\n    return poly;\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"Buffer"],[2,12,1,10],[2,15,1,13,"require"],[2,26,1,20],[2,64,1,0],[4,0,2,0],[4,6,2,4,"GF"],[4,8,2,6],[4,11,2,9,"require"],[4,22,2,16],[4,59,2,0],[6,0,11,0,"exports"],[6,2,11,0,"exports"],[6,9,11,7],[6,10,11,8,"mul"],[6,13,11,0],[6,16,11,14],[6,25,11,23,"mul"],[6,28,11,14],[6,29,11,28,"p1"],[6,31,11,14],[6,33,11,32,"p2"],[6,35,11,14],[6,37,11,36],[7,0,12,2],[7,8,12,6,"coeff"],[7,13,12,11],[7,16,12,14],[7,20,12,18,"Buffer"],[7,26,12,14],[7,27,12,25,"p1"],[7,29,12,27],[7,30,12,28,"length"],[7,36,12,25],[7,39,12,37,"p2"],[7,41,12,39],[7,42,12,40,"length"],[7,48,12,25],[7,51,12,49],[7,52,12,14],[7,53,12,2],[8,0,13,2,"coeff"],[8,4,13,2,"coeff"],[8,9,13,7],[8,10,13,8,"fill"],[8,14,13,2],[8,15,13,13],[8,16,13,2],[10,0,15,2],[10,9,15,7],[10,13,15,11,"i"],[10,14,15,12],[10,17,15,15],[10,18,15,2],[10,20,15,18,"i"],[10,21,15,19],[10,24,15,22,"p1"],[10,26,15,24],[10,27,15,25,"length"],[10,33,15,2],[10,35,15,33,"i"],[10,36,15,34],[10,38,15,2],[10,40,15,38],[11,0,16,4],[11,11,16,9],[11,15,16,13,"j"],[11,16,16,14],[11,19,16,17],[11,20,16,4],[11,22,16,20,"j"],[11,23,16,21],[11,26,16,24,"p2"],[11,28,16,26],[11,29,16,27,"length"],[11,35,16,4],[11,37,16,35,"j"],[11,38,16,36],[11,40,16,4],[11,42,16,40],[12,0,17,6,"coeff"],[12,8,17,6,"coeff"],[12,13,17,11],[12,14,17,12,"i"],[12,15,17,13],[12,18,17,16,"j"],[12,19,17,11],[12,20,17,6],[12,24,17,22,"GF"],[12,26,17,24],[12,27,17,25,"mul"],[12,30,17,22],[12,31,17,29,"p1"],[12,33,17,31],[12,34,17,32,"i"],[12,35,17,31],[12,36,17,22],[12,38,17,36,"p2"],[12,40,17,38],[12,41,17,39,"j"],[12,42,17,38],[12,43,17,22],[12,44,17,6],[13,0,18,5],[14,0,19,3],[16,0,21,2],[16,11,21,9,"coeff"],[16,16,21,2],[17,0,22,1],[17,3,11,0],[19,0,31,0,"exports"],[19,2,31,0,"exports"],[19,9,31,7],[19,10,31,8,"mod"],[19,13,31,0],[19,16,31,14],[19,25,31,23,"mod"],[19,28,31,14],[19,29,31,28,"divident"],[19,37,31,14],[19,39,31,38,"divisor"],[19,46,31,14],[19,48,31,47],[20,0,32,2],[20,8,32,6,"result"],[20,14,32,12],[20,17,32,15],[20,21,32,19,"Buffer"],[20,27,32,15],[20,28,32,26,"divident"],[20,36,32,15],[20,37,32,2],[22,0,34,2],[22,11,34,10,"result"],[22,17,34,16],[22,18,34,17,"length"],[22,24,34,10],[22,27,34,26,"divisor"],[22,34,34,33],[22,35,34,34,"length"],[22,41,34,9],[22,45,34,45],[22,46,34,2],[22,48,34,48],[23,0,35,4],[23,10,35,8,"coeff"],[23,15,35,13],[23,18,35,16,"result"],[23,24,35,22],[23,25,35,23],[23,26,35,22],[23,27,35,4],[25,0,37,4],[25,11,37,9],[25,15,37,13,"i"],[25,16,37,14],[25,19,37,17],[25,20,37,4],[25,22,37,20,"i"],[25,23,37,21],[25,26,37,24,"divisor"],[25,33,37,31],[25,34,37,32,"length"],[25,40,37,4],[25,42,37,40,"i"],[25,43,37,41],[25,45,37,4],[25,47,37,45],[26,0,38,6,"result"],[26,8,38,6,"result"],[26,14,38,12],[26,15,38,13,"i"],[26,16,38,12],[26,17,38,6],[26,21,38,19,"GF"],[26,23,38,21],[26,24,38,22,"mul"],[26,27,38,19],[26,28,38,26,"divisor"],[26,35,38,33],[26,36,38,34,"i"],[26,37,38,33],[26,38,38,19],[26,40,38,38,"coeff"],[26,45,38,19],[26,46,38,6],[27,0,39,5],[29,0,42,4],[29,10,42,8,"offset"],[29,16,42,14],[29,19,42,17],[29,20,42,4],[31,0,43,4],[31,13,43,11,"offset"],[31,19,43,17],[31,22,43,20,"result"],[31,28,43,26],[31,29,43,27,"length"],[31,35,43,11],[31,39,43,37,"result"],[31,45,43,43],[31,46,43,44,"offset"],[31,52,43,43],[31,53,43,37],[31,58,43,56],[31,59,43,4],[32,0,43,59,"offset"],[32,8,43,59,"offset"],[32,14,43,65],[33,0,43,4],[35,0,44,4,"result"],[35,6,44,4,"result"],[35,12,44,10],[35,15,44,13,"result"],[35,21,44,19],[35,22,44,20,"slice"],[35,27,44,13],[35,28,44,26,"offset"],[35,34,44,13],[35,35,44,4],[36,0,45,3],[38,0,47,2],[38,11,47,9,"result"],[38,17,47,2],[39,0,48,1],[39,3,31,0],[41,0,57,0,"exports"],[41,2,57,0,"exports"],[41,9,57,7],[41,10,57,8,"generateECPolynomial"],[41,30,57,0],[41,33,57,31],[41,42,57,40,"generateECPolynomial"],[41,62,57,31],[41,63,57,62,"degree"],[41,69,57,31],[41,71,57,70],[42,0,58,2],[42,8,58,6,"poly"],[42,12,58,10],[42,15,58,13],[42,19,58,17,"Buffer"],[42,25,58,13],[42,26,58,24],[42,27,58,25],[42,28,58,24],[42,29,58,13],[42,30,58,2],[44,0,59,2],[44,9,59,7],[44,13,59,11,"i"],[44,14,59,12],[44,17,59,15],[44,18,59,2],[44,20,59,18,"i"],[44,21,59,19],[44,24,59,22,"degree"],[44,30,59,2],[44,32,59,30,"i"],[44,33,59,31],[44,35,59,2],[44,37,59,35],[45,0,60,4,"poly"],[45,6,60,4,"poly"],[45,10,60,8],[45,13,60,11,"exports"],[45,20,60,18],[45,21,60,19,"mul"],[45,24,60,11],[45,25,60,23,"poly"],[45,29,60,11],[45,31,60,29],[45,32,60,30],[45,33,60,29],[45,35,60,33,"GF"],[45,37,60,35],[45,38,60,36,"exp"],[45,41,60,33],[45,42,60,40,"i"],[45,43,60,33],[45,44,60,29],[45,45,60,11],[45,46,60,4],[46,0,61,3],[48,0,63,2],[48,11,63,9,"poly"],[48,15,63,2],[49,0,64,1],[49,3,57,0]]},"type":"js/module"}]}